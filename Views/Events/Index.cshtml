@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<EventPortal.FormModels.PaginationModel<Umbraco.Cms.Web.Common.PublishedModels.Event>>
@using EventPortal.FormModels
@using Umbraco.Cms.Web.Common.PublishedModels
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Events";
}

<div class="events-list">
    @if (Model.Items != null && Model.Items.Any())
    {
        <div class="events-grid">
            @foreach (var eventItem in Model.Items)
            {
                <div class="event-card">
                    <img src="@eventItem.Image" />
                    <div class="event-card-content">
                        <h3>@eventItem.Name</h3>
                        <p>@eventItem.Description</p>
                        <a href="@eventItem.Url()">View Event</a>
                    </div>
                </div>
            }
        </div>

        @if (Model.TotalPages > 1)
        {
            <ul class="pagination">
                @if (Model.CurrentPage > 1)
                {
                    <li><a href="@Model.Url?page=@(Model.CurrentPage - 1)" class="pagination-link">Previous</a></li>
                }
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    var activeClass = Model.CurrentPage == i ? " active" : "";
                    <li><a href="@Model.Url?page=@i" class="pagination-link@(activeClass)">@i</a></li>
                }
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li><a href="@Model.Url?page=@(Model.CurrentPage + 1)" class="pagination-link">Next</a></li>
                }
            </ul>
        }
    }
    else
    {
        <p class="no-events">No events found.</p>
    }
</div>
<style>
    /* Container for the events list */
    .events-list {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    /* Grid layout for cards */
    .events-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
    }

    /* Event card styling */
    .event-card {
        border: 1px solid #eee;
        border-radius: 8px;
        background-color: #fff;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: transform 0.2s;
    }

        .event-card:hover {
            transform: translateY(-5px);
        }

        .event-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

    .event-card-content {
        padding: 15px;
    }

    .event-card h3 {
        margin: 0 0 10px;
        font-size: 1.5rem;
        color: #333;
    }

    .event-card p {
        margin: 0 0 15px;
        color: #666;
        font-size: 1rem;
        line-height: 1.5;
    }

    .event-card a {
        display: inline-block;
        padding: 8px 16px;
        background-color: #007bff;
        color: white;
        text-decoration: none;
        border-radius: 4px;
        font-weight: bold;
    }

        .event-card a:hover {
            background-color: #0056b3;
        }

    /* Pagination styling */
    .pagination {
        display: flex;
        justify-content: center;
        list-style: none;
        padding: 0;
        margin-top: 20px;
    }

        .pagination li {
            margin: 0 5px;
        }

    .pagination-link {
        display: inline-block;
        padding: 8px 12px;
        border: 1px solid #ddd;
        border-radius: 4px;
        text-decoration: none;
        color: #333;
        background-color: #fff;
        transition: background-color 0.2s;
    }

        .pagination-link:hover {
            background-color: #f5f5f5;
        }

        .pagination-link.active {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }

    /* No events message */
    .no-events {
        text-align: center;
        color: #666;
        font-size: 1.2rem;
        margin-top: 20px;
    }
</style>